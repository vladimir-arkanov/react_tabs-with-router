{"version":3,"sources":["pages/PageNavLinks.tsx","pages/HomePage.tsx","components/Tabs.tsx","pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","memo","to","title","className","isActive","classNames","HomePage","Tabs","tabs","tabId","selectedTabContent","useMemo","tab","properTab","find","el","id","content","map","TabsPage","useParams","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"uPASaA,EAA+BC,gBAAK,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACtD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACTC,IAAW,cACT,CAAE,YAAaD,KAJrB,SAOGF,OClBMI,EAAW,WACtB,OACE,oBAAIH,UAAU,QAAd,wBCQSI,EAAwBP,gBAAK,YAA2B,IAAxBQ,EAAuB,EAAvBA,KAAuB,IAAjBC,aAAiB,MAAT,GAAS,EAC5DC,EAAqBC,mBAAQ,kBAAM,SAACC,GACxC,IAAMC,EAAYD,EAAIE,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOP,KAE3C,cAAOI,QAAP,IAAOA,OAAP,EAAOA,EAAWI,WACjB,CAACR,IAEJ,OACE,qCACE,oBAAIN,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGK,EAAKU,KAAI,SAAAN,GAAG,OACX,oBACE,UAAQ,MACRT,UAAWE,IACT,CAAE,YAAaI,IAAUG,EAAII,KAHjC,SAME,cAAC,IAAD,CAASf,GAAE,UAAKW,EAAII,IAApB,SAA2BJ,EAAIV,iBAMvC,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGO,EAAmBF,IAAS,8BChC/BA,EAAO,CACX,CAAEQ,GAAI,QAASd,MAAO,QAASe,QAAS,eACxC,CAAED,GAAI,QAASd,MAAO,QAASe,QAAS,eACxC,CAAED,GAAI,QAASd,MAAO,QAASe,QAAS,gBAG7BE,EAAqBnB,gBAAK,WACrC,IAAQS,EAAUW,cAAVX,MAER,OACE,cAACF,EAAD,CAAMC,KAAMA,EAAMC,MAAOA,OCNhBY,EAAgB,WAC3B,OACE,qCACE,qBACElB,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACJ,EAAD,CAAaE,GAAG,IAAIC,MAAM,SAC1B,cAACH,EAAD,CAAaE,GAAG,OAAOC,MAAM,gBAKnC,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MAEpD,cAAC,IAAD,CAAOF,KAAK,QAAQC,QAAS,cAACJ,EAAD,IAA7B,SACE,cAAC,IAAD,CAAOG,KAAK,SAASC,QAAS,cAACJ,EAAD,QAGhC,cAAC,IAAD,CACEG,KAAK,IACLC,QAAS,oBAAIpB,UAAU,QAAd,yCC/BvBsB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0032ce2e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string\n  title: string\n};\n\nexport const PageNavLink: React.FC<Props> = memo(({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => (\n        classNames('navbar-item',\n          { 'is-active': isActive })\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n});\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import React, { memo, useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\nexport type Props = {\n  tabId: string | undefined,\n  tabs: Tab[]\n};\n\nexport const Tabs: React.FC<Props> = memo(({ tabs, tabId = '' }) => {\n  const selectedTabContent = useMemo(() => (tab: Tab[]) => {\n    const properTab = tab.find(el => el.id === tabId);\n\n    return properTab?.content;\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames(\n                { 'is-active': tabId === tab.id },\n              )}\n            >\n              <NavLink to={`${tab.id}`}>{tab.title}</NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent(tabs) || 'Please select a tab'}\n      </div>\n    </>\n  );\n});\n","import React, { memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Tabs } from '../components/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = memo(() => {\n  const { tabId } = useParams();\n\n  return (\n    <Tabs tabs={tabs} tabId={tabId} />\n  );\n});\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PageNavLink } from './pages/PageNavLinks';\nimport { HomePage } from './pages/HomePage';\nimport { TabsPage } from './pages/TabsPage';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" title=\"Home\" />\n            <PageNavLink to=\"tabs\" title=\"Tabs\" />\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"/tabs\" element={<TabsPage />}>\n              <Route path=\":tabId\" element={<TabsPage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}